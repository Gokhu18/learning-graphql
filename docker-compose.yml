version: '3'

services:
  'graphql-web':
    build:
      context: ./photo-share-client
      dockerfile: ./Dockerfile.dev
    container_name: 'graphql-web'
    command: ./node_modules/.bin/react-scripts start
    environment:
      - CLIENT_ID=2ebb206285af39a776cc
    ports:
      - "3000:3000"
    # If you want local changes to update the Docker container, you can pass through project files like this:
    volumes:
      - ./photo-share-client:/usr/src
    depends_on:
      - graphql-api

  'graphql-api':
    build:
      context: ./photo-share-api
      dockerfile: ./Dockerfile.dev
    container_name: 'graphql-api'
    # This service will not start until either the mongodb service is available OR thirty seconds have elapsed
    command: sh -c './scripts/wait-for.sh --timeout=30 mongodb:27017 && ./node_modules/.bin/nodemon -e js,json,graphql'
    environment:
      - MONGO_URI=mongodb://mongodb:27017/photoshare
      - CLIENT_ID=2ebb206285af39a776cc
    ports:
      - "4000:4000"
      - "9229:9229"
    # If you want local changes to update the Docker container, you can pass through project files like this:
    volumes:
      - ./photo-share-api:/usr/src
    depends_on:
      - mongodb

  mongodb:
    image: mongo
    container_name: "graphql-mongodb"
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    # If you want to persist MongoDB data after a container has been stopped/deleted, uncomment the volumes section
    # volumes:
    #   - ./photo-share-api/.docker/mongodb/data/db:/data/db
    ports:
      - "27017:27017"
